apiVersion: apps/v1
kind: Deployment
metadata:
  name: webnfs
  labels:
    app: webnfs
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webnfs
  template:
    metadata:
      labels:
        app: webnfs
    spec:
      containers:
      - name: nginx-server
        image: nginx:latest
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: nfs
        ports:
        - containerPort: 80
      - name: ubuntu-server
        image: ubuntu
        volumeMounts:
        - mountPath: /pod-data
          name: nfs
        command: ["/bin/sh"]
        args:      
            - "-c"       
            - >
              while true; do          
              date >> /pod-data/index.html;          
              echo "Hello from the second container<br>"
              >> /pod-data/index.html;          sleep 1;       done 

      volumes:
      - name: nfs
        persistentVolumeClaim:
          claimName: nfs
---
apiVersion: v1
kind: Service
metadata:
  name: webservice-nfs
spec:
  type: NodePort
  selector:
    app: webnfs
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30010

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: nfs
spec:
  capacity:
    storage: 1Mi
  accessModes:
    - ReadWriteMany
  nfs:
    server: nfs-server.default.svc.cluster.local
    path: "/"
  mountOptions:
    - nfsvers=4.2

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nfs
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: ""
  resources:
    requests:
      storage: 1Mi
  volumeName: nfs